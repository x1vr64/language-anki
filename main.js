/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => ObsidianLanguageAnkiPlugin
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var ObsidianLanguageAnkiPlugin = class extends import_obsidian.Plugin {
  onload() {
    function isOnlyBulletPrefix(value) {
      return value.startsWith("- [") || value === "-";
    }
    this.addCommand({
      id: "translate-word",
      name: "Translate selected word",
      hotkeys: [{ modifiers: ["Mod", "Shift"], key: "a" }],
      editorCallback: (editor) => {
        const DELIMITER = " = ";
        const currentLine = editor.getCursor().line;
        const value = editor.getLine(currentLine);
        if (value.length === 0 || isOnlyBulletPrefix(value)) {
          return;
        }
        if (value.contains(DELIMITER)) {
          return;
        }
        this.translateWord(value).then((res) => editor.setLine(currentLine, `${value}${DELIMITER}${res}`));
      }
    });
  }
  async translateWord(value) {
    const url = `https://translate.google.com/translate_a/single?client=at&dt=t&dj=1`;
    const body = this.buildBody(value);
    const response = await (0, import_obsidian.requestUrl)({
      method: "POST",
      url,
      body,
      contentType: "application/x-www-form-urlencoded;charset=utf-8"
    });
    console.log(response.status);
    console.log(response);
    return response.json["sentences"][0]["trans"];
  }
  buildBody(inputText) {
    return "sl=en&tl=ru&q=" + encodeURIComponent(inputText);
  }
};
